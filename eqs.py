from pylab import *

def fun_range(fun_index):
    if fun_index == 1:
        d=5
        l = [-2]
        u = [2]
    elif fun_index == 2:
        d=4
        l = [-100]
        u = [100]
    elif fun_index == 3:
        d=6
        l = [-10]
        u = [10]
    elif fun_index == 4:
        d=10
        l = [-2]
        u = [2]
    elif fun_index == 5:
        d = 8
        l = [-1]
        u = [1]
    elif fun_index == 6:
        d = 3
        l = [-10]
        u = [10]
    elif fun_index == 7:
        d = 2
        l = [-10]
        u = [10]
    elif fun_index == 8:
        d = 3
        l = [-10]
        u = [10]
    elif fun_index == 9:
        d = 3
        l = [-10]
        u = [10]

    elif fun_index == 10:
        d = 2
        l = [0]
        u = [15]
    elif fun_index == 11:
        d=5
        l = [-10]
        u = [10]
    return l*d, u*d, d





def ben_functions(x, function_index):
    # Sphere
    if function_index == 1:
        s = (2*x[0] + x[1] + x[2] + x[3] + x[4]-6)**2+\
            (x[0] + 2*x[1] + x[2] + x[3] + x[4] - 6)**2+\
            (x[0] + x[1] + 2*x[2] + x[3] + x[4] - 6)**2+\
            (x[0] + x[1] + x[2] + 2*x[3] + x[4] - 6)**2+\
            (x[0]*x[1]*x[2]*x[3]*x[4] -1)**2
    elif function_index == 2:
        s=(x[0]-cos(2*x[0]-(x[0]+x[1]+x[2]+x[3])))**2+\
          (x[1]-cos(2*x[1]-(x[0]+x[1]+x[2]+x[3])))**2+\
          (x[2]-cos(2*x[2]-(x[0]+x[1]+x[2]+x[3])))**2+\
          (x[3]-cos(2*x[3]-(x[0]+x[1]+x[2]+x[3])))**2  
    elif function_index == 3:
        s=(x[0]**2+x[2]**2-1)**2+\
          (x[1]**2+x[3]**2-1)**2+\
          (x[4]*x[2]**3+x[5]*x[3]**3)**2+\
          (x[4]*x[0]**3+x[5]*x[1]**3)**2+\
          (x[4]*x[0]*x[2]**2+x[5]*x[1]*x[3]**2)**2+\
          (x[4]*x[2]*x[0]**2+x[5]*x[3]*x[1]**2)**2  
        
    elif function_index==4:
        s=  (x[0]- 0.25428722 - 0.18324757*x[3]*x[2]*x[8])**2+\
            (x[1]- 0.37842197 - 0.16275449*x[0]*x[9]*x[5])**2+\
            (x[2]- 0.27162577 - 0.16955071*x[0]*x[1]*x[9])**2+\
            (x[3]- 0.19807914 - 0.15585316*x[6]*x[0]*x[5])**2+\
            (x[4]- 0.44166728 - 0.19950920*x[6]*x[5]*x[2])**2+\
            (x[5]- 0.14654113 - 0.18922793*x[7]*x[4]*x[9])**2+\
            (x[6]- 0.42937161 - 0.21180486*x[1]*x[4]*x[7])**2+\
            (x[7]- 0.07056438 - 0.17081208*x[0]*x[6]*x[5])**2+\
            (x[8]- 0.34504906 - 0.19612740*x[9]*x[5]*x[7])**2+\
            (x[9]- 0.42651102 - 0.21466544*x[3]*x[7]*x[0])**2
    elif function_index == 5:
        s=(4.731 * 10**(-3)*x[0]*x[2] - 0.3578*x[1]*x[2] - 0.1238*x[0] + x[6] - 1.637 * 10**(-3)*x[1] - 0.9338*x[3] - 0.3571)**2+\
          (0.2238*x[0]*x[2] + 0.7623*x[1]*x[2] + 0.2638*x[0] - x[6] - 0.07745*x[1] - 0.6734*x[3] - 0.6022)**2+\
          (x[5]*x[7] + 0.3578*x[0] + 4.731 * 10**(-3)*x[1])**2+\
          (-0.7623*x[0] + 0.2238*x[1] + 0.3461)**2+\
          (x[0]**2+x[1]**2-1)**2+\
          (x[2]**2+x[3]**2-1)**2+\
          (x[4]**2+x[5]**2-1)**2+\
          (x[6]**2+x[7]**2-1)**2
    elif function_index == 6:
        s = (exp(x[0]**2)-8*x[0]*sin(x[1]))**2+\
            (x[0]+x[1]-1)**2+\
            ((x[2]-1)**3)**2
    elif function_index == 7:
        s = (x[0]**3-3*(x[0]*x[1]**2)-1)**2+\
            (3*x[1]*x[0]**2-x[1]**3+1)**2
    elif function_index == 8:
        s = (3*x[0]-cos(x[1]*x[2])-0.5)**2+\
            (x[0]**2-625*x[1]**2-0.25)**2+\
            (exp(-x[0]*x[1])+20*x[2]+(10*pi-3)/3)**2  
    elif function_index == 9:
        s =  (3*x[0]-cos(x[1]*x[2])-0.5)**2+\
             (x[0]**2-81*(x[1]+0.1)**2+sin(x[2])+1.06)**2+\
             (exp(-x[0]*x[1])+20*x[2]+(10*pi-3)/3)**2
    elif function_index == 10:
        s = (exp(x[0])+x[0]*x[1]-1)**2+\
            (sin(x[0]*x[1])+x[0]+x[1]-1)**2 
    elif function_index == 11:
        s = (x[0] + x[1] + x[2]+x[3]+x[4] )**2+\
            (x[0]*x[1] + x[0]*x[4] + x[1]*x[2] + x[2]*x[3]+x[3]*x[4])**2+\
            (x[0]*x[1]*x[2] + x[0]*x[1]*x[4] + x[0]*x[3]*x[4] + x[1]*x[2]*x[3]+ x[2]*x[3]*x[4])**2+\
            (x[0]*x[1]*x[2]*x[3] +x[0]*x[1]*x[2]*x[4]+x[0]*x[1]*x[3]*x[4]+x[0]*x[2]*x[3]*x[4]+x[1]*x[2]*x[3]*x[4])**2+\
            (x[0]*x[1]*x[2]*x[3]*x[4]-1)**2
      
    return s
